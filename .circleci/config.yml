version: 2

aliases:

  # Restore backend cache.
  - &steps_cache_restore_backend
    restore_cache:
      name: Restore backend cache
      keys:
      - v7-backend-{{ checksum "backend/composer.lock" }}
      # fallback to using the latest cache if no exact match is found
      - v7-backend-

  # Restore frontend cache.
  - &steps_cache_restore_frontend
    restore_cache:
      name: Restore frontend cache
      keys:
      - v1-frontend-{{ checksum "frontend/package-lock.json" }}
      # fallback to using the latest cache if no exact match is found
      - v1-frontend-

jobs:

  build:
    machine: true
    working_directory: ~/repo

    steps:
      - checkout

      # Restore caches.
      - *steps_cache_restore_backend
      - *steps_cache_restore_frontend

      # Modify permissions so the PHP and Node containers can build their
      # dependencies.
      - run:
          name: Fix permissions
          command: sudo chown -R ubuntu.ubuntu *

      # Setup the .env file.
      - run:
          name: Setup the project .env file
          command: sed 's/MEETUP_API_KEY=/MEETUP_API_KEY='"$MEETUP_API_KEY"'/g' .env-example > .env

      # Run the Makefile install command.
      - run:
          name: Run the Makefile install command
          command: make install

      # Save backend cache.
      - save_cache:
          name: Save backend cache
          paths:
            - ./backend/bin
            - ./backend/vendor
            - ./backend/web/core
            - ./backend/web/modules/contrib
            - ./backend/web/profiles/contrib
            - ./backend/web/themes/contrib
            - ./backend/web/libraries
          key: v7-backend-{{ checksum "backend/composer.lock" }}

      # Save frontend cache.
      - save_cache:
          name: Save frontend cache
          paths:
            - ./frontend/node_modules
          key: v1-frontend-{{ checksum "frontend/package-lock.json" }}

      # Backup installed database.
      - run:
          name: Backup installed database
          command: make db-export database.sql

      # Store database in workspace.
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .env
            - database/database.sql

      # Store install artifacts.
      - store_artifacts:
          name: Store install artifacts
          path: ~/repo/database/database.sql
          destination: database/database.sql

  test:
    machine: true
    working_directory: ~/repo

    steps:
      - checkout

      # Restore workspace
      - attach_workspace:
          at: ~/repo

      # Restore caches.
      - *steps_cache_restore_backend
      - *steps_cache_restore_frontend

      # Modify permissions so the PHP and Node containers can build their
      # dependencies.
      - run:
          name: Fix permissions
          command: sudo chown -R ubuntu.ubuntu *

      # Spin up Docker containers.
      - run:
          name: Turn on Docker containers
          command: make up

      # Run code linting.
      - run:
          name: Running code linting
          command: make lint

      # Wait for database.
      - run:
          name: Wait for database to start
          command: make db-status

      # Importing database backup.
      - run:
          name: Import database backup
          command: make db-import database.sql

      # Run Behat tests.
      - run:
          name: Run Behat tests
          command: make test-behat

      # Save Behat artifacts.
      - store_artifacts:
          name: Store Behat HTML report
          path: ~/repo/tests/behat/html_report
          destination: behat/html_report
      - store_artifacts:
          name: Store Behat screenshots
          path: ~/repo/tests/behat/screenshots
          destination: behat/screenshots

      # Run BackstopJS tests.
      - run:
          name: Run BackstopJS tests
          # @TODO: Replace below once BackstopJS tests are expecte to pass.
          # command: make test-backstopjs
          command: make test-backstopjs | true

      # Save BackstopJS artifacts.
      - store_artifacts:
          name: Store BackstopJS HTML report
          path: ~/repo/tests/backstopjs/html_report
          destination: backstopjs/html_report
      - store_artifacts:
          name: Store BackstopJS Reference screenshots
          path: ~/repo/tests/backstopjs/bitmaps_reference
          destination: backstopjs/bitmaps_reference
      - store_artifacts:
          name: Store BackstopJS Test screenshots
          path: ~/repo/tests/backstopjs/bitmaps_test
          destination: backstopjs/bitmaps_test

workflows:
  version: 2

  build:
    jobs:
      - build
      - test:
          requires:
            - build
